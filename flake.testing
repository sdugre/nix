{
  description = "Sean's nix config";

  inputs = {
    # Nixpkgs
    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";   

    nixos-hardware.url = "github:NixOS/nixos-hardware/master";

    # Home manager
    home-manager.url = "github:nix-community/home-manager";
    home-manager.inputs.nixpkgs.follows = "nixpkgs";

    # Agenix Age-encrypted secrets for NixOS
#    agenix.url = "github:ryantm/agenix";

    # Nix User Repository (NUR)
    nur.url = "github:nix-community/NUR";

    firefox-addons = {
      url = "gitlab:rycee/nur-expressions?dir=pkgs/firefox-addons";
      inputs.nixpkgs.follows = "nixpkgs";
    };

    hyprland.url = "github:hyprwm/hyprland";
    hyprland.inputs.nixpkgs.follows = "nixpkgs";

    hyprland-contrib.url = "github:hyprwm/contrib";
    hyprland-contrib.inputs.nixpkgs.follows = "nixpkgs";   

    nix-colors.url = "github:misterio77/nix-colors";
  
    arkenfox.url = "git+https://github.com/dwarfmaster/arkenfox-nixos?ref=main";
    arkenfox.inputs.nixpkgs.follows = "nixpkgs";

#    impermanence.url = "github:nix-community/impermanence";   

  };

  outputs = { self, nixpkgs, home-manager, ... }@inputs:
    let
      inherit (self) outputs;
      lib = nixpkgs.lib // home-manager.lib;
      systems = [ "x86_64-linux" "aarch64-linux" ];
      forEachSystem = f: lib.genAttrs systems (system: f pkgsFor.${system});
      pkgsFor = lib.genAttrs systems (system: import nixpkgs {
        inherit system;
        config.allowUnfree = true;

      libx = import ./lib { inherit self inputs outputs; };  
    in
    {
      inherit lib;
      nixosModules = import ./modules/nixos;
      homeManagerModules = import ./modules/home-manager;
      templates = import ./templates;

      overlays = import ./overlays { inherit inputs outputs; };
      hydraJobs = import ./hydra.nix { inherit inputs outputs; };

      packages = forEachSystem (pkgs: import ./pkgs { inherit pkgs; });
      devShells = forEachSystem (pkgs: import ./shell.nix { inherit pkgs; });
      formatter = forEachSystem (pkgs: pkgs.nixpkgs-fmt);

      wallpapers = import ./home/sdugre/wallpapers;

      nixosConfigurations = {
        chummie    = libx.mkHost { hostname = "chummie";                                           }; # server
	      nixos      = libx.mkHost { hostname = "nixos";      desktop = "gnome"; stateVer = "23.05"; }; # test VM
        chromebook = libx.mkHost { hostname = "chromebook"; desktop = "gnome"; stateVer = "23.05"; }; # secondary laptop
        thinkpad   = libx.mkHost { hostname = "thinkpad";   desktop = "hyprland";                  }; # primary laptop
      };

      homeConfigurations =  {  
        "sdugre@chummie"    = libx.mkHome { hostname = "chummie";                                             };
        "sdugre@chromebook" = libx.mkHome { hostname = "chromebook"; desktop = "gnome"; hmStateVer = "23.05"; };
        "sdugre@nixos"      = libx.mkHome { hostname = "nixos";      desktop = "gnome"; hmStateVer = "23.05"; };
        "sdugre@thinkpad"   = libx.mkHome { hostname = "thinkpad";   desktop = "hyprland";                    };
      };
    };
}
